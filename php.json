{
/*
	 // Place your snippets for PHP here. Each snippet is defined under a snippet name and has a prefix, body and 
	 // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	 // $1, $2 for tab stops, ${id} and ${id:label} and ${1:label} for variables. Variables with the same id are connected.
	 // Example:
	 "Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/

	 "Laravel style coment": {
		"prefix": "comment",
		"body": [
			"/*",
			"|--------------------------------------------------------------------------",
			"| $1",
			"|--------------------------------------------------------------------------",
			"|",
			"| $2",
			"|",
			"|",
			"|",
			"*/"
		],
		"description": "The skeleton of a Laravel style comment"
	},
		 "Route": {
		"prefix": "route",
		"body": [
			"$app->get('$1', function ($2) use ($3) {",
			"	$4",
			"});"
		],
		"description": "Route definition skeleton"
	},
	 "migration": {
		"prefix": "migration",
		"body": [
			"Schema::create('$1', function(Blueprint $table) {",
			"});"
		],
		"description": "Migration Blueprint"
	},
	 "seed": {
		"prefix": "seed",
		"body": [
			"DB::table('$1')->insert([",
			"]);"
		],
		"description": "Method for filling seeds"
	},
	 "simple comment": {
		"prefix": "comment-simple-function",
		"body": [
			"/**",
			"* $1",
			"*",
			"* @return $2",
			"*/"
		],
		"description": "A simple multiline comment for functions"
	},
	
	 "Model": {
		"prefix": "model-lumen",
		"body": [
			"<?php",
			"",
			"namespace App;",
			"",
			"class $1 extends Model",
			"{",
			"	 /**",
			"	 * The database used by the model.",
			"	 *",
			"	 * @var string",
			"	 */",
			"    protected $table = '$2';",
			"",
			"	 /**",
			"	 * The attributes that are mass assignable.",
			"	 *",
			"	 * @var array",
			"	 */",
			"	protected $fillable = ['$3'];",
			"",
			"	 /**",
			"	 * The attributes excluded from the model's JSON form.",
			"	 *",
			"	 * @var array",
			"	 */",
			"	protected $hidden = ['$4'];",
			"}"			
		],
		"description": "A model skeleton for Lumen to overpass the lack of artisan make:model command"
	},
	
	 "Controller": {
		"prefix": "controller-lumen",
		"body": [
			"<?php",
			"",
			"namespace App\\Http\\Contollers;",
			"",
			"use App\\Http\\Controllers\\Controller;",
			"use Illuminate\\Http\\Request;",
			"use Input;",
			"use Redirect;",
			"",
			"class $1Controller extends Controller",
			"{",
			"	 /**",
			"	 * Validation rules.",
			"	 *",
			"	 */",
			"    protected $rules = [",
			"	 	 //name'=>['required','min:3']",
			"	 ];",
			"",
			"	 /**",
			"	 * Display a listing of the resource.",
			"	 *",
			"	 * @return json",
			"	 */",
			"	 public function index()",
			"	 {",
			"	 ",
			"	 }",
			"",		
			"	 /**",
			"	 * Store a newly created resource in storage.",
			"	 *",
			"	 * @return response",
			"	 */",
			"	 public function store()",
			"	 {",
			"	 ",
			"	 }",
			"",
			"	 /**",
			"	 * Display the specified resource.",
			"	 *",
			"	 * @param $",
			"	 * @return json",
			"	 */",
			"	 public function show()",
			"	 {",
			"	 ",
			"	 }",
			"	 /**",
			"	 * Update the specified resource in storage.",
			"	 *",
			"	 * @param $",
			"	 * @return Response",
			"	 */",
			"	 public function update()",
			"	 {",
			"	 ",
			"	 }",
			"	 /**",
			"	 * Remove the specified resource from storage.",
			"	 *",
			"	 * @param $",
			"	 * @return Response",
			"	 */",
			"	 public function destroy()",
			"	 {",
			"	 ",
			"	 }",
			"}"
		],
		"description": "A controller skeleton for Lumen to overpass the lack of artisan make:controller command"
	},
	"Model relation": {
		"prefix": "relationship",
		"body": [
			"public function $1 ()",
			"{",
			"	 $this->$2();",
			"}"
		],
		"description": "Skeleton of a model relationship"
	}	
	
}